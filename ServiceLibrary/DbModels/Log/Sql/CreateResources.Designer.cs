//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceLibrary.DbModels.Log.Sql {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CreateResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CreateResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ServiceLibrary.DbModels.Log.Sql.CreateResources", typeof(CreateResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* author: ahupa@polsl.pl, 2018 */
        ///
        ///CREATE FUNCTION Log.fn_select_eventlog_context
        ///(
        ///	@id INT
        ///)
        ///--WITH EXECUTE AS CALLER 
        ///RETURNS TABLE
        ///AS
        ///RETURN
        ///(
        ///	/* Using Common Table Expressions to achieve single query implementation required for
        ///	-- inline functions and to reduces estimated subtree cost comparing to traditional join approach. */
        ///
        ///	WITH
        ///	Log_LogRecords AS
        ///	(
        ///		SELECT * FROM Log.LogRecords WHERE Id = @id
        ///	)
        ///	SELECT lr.TimeStamp, lr.Level, lr.Logger,
        ///		   s.Address, s.MachineName, s.W [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fn_select_eventlog_context_sql {
            get {
                return ResourceManager.GetString("fn_select_eventlog_context_sql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* author: ahupa@polsl.pl, 2018 */
        ///
        ///CREATE FUNCTION Log.fn_select_eventlog
        ///(
        ///	@id INT
        ///)
        ///--WITH EXECUTE AS CALLER 
        ///RETURNS TABLE
        ///AS
        ///RETURN
        ///(
        ///	/* Using Common Table Expressions to achieve single query implementation required for
        ///	-- inline functions and to reduces estimated subtree cost comparing to traditional join approach. */
        ///
        ///	WITH
        ///	Log_LogRecords AS
        ///	(
        ///		SELECT * FROM Log.LogRecords WHERE Id = @id
        ///	)
        ///	SELECT lr.TimeStamp, lr.Level, lr.Logger,
        ///		   s.Address, s.MachineName, s.WindowsId [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fn_select_eventlog_sql {
            get {
                return ResourceManager.GetString("fn_select_eventlog_sql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* author: ahupa@polsl.pl, 2018 */
        ///
        ///CREATE PROCEDURE Log.usp_insert_eventlog_context
        ///(
        ///	@time_stamp DATETIME2(7), @level TINYINT, @logger NVARCHAR(64),
        ///	@address NVARCHAR(80), @machine_name NVARCHAR(50), @windows_id NVARCHAR(50),
        ///	@call_side NVARCHAR(128), @line_number INT,
        ///	@thread_id INT = NULL, @stack_trace NVARCHAR(256) = NULL,
        ///	@message NVARCHAR(256) = NULL, @exception NVARCHAR(MAX) = NULL, @json_object NVARCHAR(MAX) = NULL
        ///)
        ///--WITH EXECUTE AS OWNER, SCHEMABINDING, NATIVE_COMPILATION
        ///AS
        ///BEG [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string usp_insert_eventlog_context_sql {
            get {
                return ResourceManager.GetString("usp_insert_eventlog_context_sql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* author: ahupa@polsl.pl, 2018 */
        ///
        ///CREATE PROCEDURE Log.usp_insert_eventlog
        ///(
        ///	@time_stamp DATETIME2(7), @level TINYINT, @logger NVARCHAR(64),
        ///	@address NVARCHAR(80), @machine_name NVARCHAR(50), @windows_id NVARCHAR(50),
        ///	@call_side NVARCHAR(128), @line_number INT,
        ///	@message NVARCHAR(256) = NULL, @exception NVARCHAR(MAX) = NULL, @json_object NVARCHAR(MAX) = NULL
        ///)
        ///--WITH EXECUTE AS OWNER, SCHEMABINDING, NATIVE_COMPILATION
        ///AS
        ///BEGIN --ATOMIC WITH (TRANSACTION ISOLATION LEVEL = SNAPSHOT, LANGUAGE = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string usp_insert_eventlog_sql {
            get {
                return ResourceManager.GetString("usp_insert_eventlog_sql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* author: ahupa@polsl.pl, 2018 */
        ///
        ///CREATE VIEW Log.vw_sourceaddresses
        ///AS
        ///
        ///	SELECT DISTINCT(s.Address) AS Address, COUNT(s.Address) AS Count
        ///		FROM Log.Sources s
        ///		GROUP BY s.Address
        ///
        ///-------------------------------------------------------------------------------
        ///
        ///	--WITH
        ///	--DistinctFirstEncounter AS
        ///	--(
        ///	--	SELECT DISTINCT (FIRST_VALUE(s.Id) OVER(PARTITION BY s.Address ORDER BY s.Creation)) AS Id
        ///	--	FROM Log.Sources s
        ///	--),
        ///	--Revisits AS
        ///	--(
        ///	--	SELECT DISTINCT(s.Address) AS Address, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string vw_sourceaddresses_sql {
            get {
                return ResourceManager.GetString("vw_sourceaddresses_sql", resourceCulture);
            }
        }
    }
}
